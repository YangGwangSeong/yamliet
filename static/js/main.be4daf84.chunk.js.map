{"version":3,"sources":["img/img_1.jpg","img/img2.jpg","img/img3.jpg","img/img4_2.png","img/img5.png","img/img6.jpg","img/img7.jpg","img/img8.png","img/img9.jpg","Slider.jsx","Title.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["contentStyle","height","color","lineHeight","textAlign","background","Slider","autoplay","alt","src","image9","className","style","image2","image1","image3","image4","image5","image6","image7","image8","Title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.be4daf84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img_1.bebe361f.jpg\";","export default __webpack_public_path__ + \"static/media/img2.93cf6035.jpg\";","export default __webpack_public_path__ + \"static/media/img3.83b89d19.jpg\";","export default __webpack_public_path__ + \"static/media/img4_2.c68a2095.png\";","export default __webpack_public_path__ + \"static/media/img5.31695f94.png\";","export default __webpack_public_path__ + \"static/media/img6.92691816.jpg\";","export default __webpack_public_path__ + \"static/media/img7.78ce16d2.jpg\";","export default __webpack_public_path__ + \"static/media/img8.e5bf07bf.png\";","export default __webpack_public_path__ + \"static/media/img9.00c9eb79.jpg\";","import React from \"react\";\r\nimport { Carousel } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport image1 from \"./img/img_1.jpg\";\r\nimport image2 from \"./img/img2.jpg\";\r\nimport image3 from \"./img/img3.jpg\";\r\nimport image4 from \"./img/img4_2.png\";\r\nimport image5 from \"./img/img5.png\";\r\nimport image6 from \"./img/img6.jpg\";\r\nimport image7 from \"./img/img7.jpg\";\r\nimport image8 from \"./img/img8.png\";\r\nimport image9 from \"./img/img9.jpg\";\r\nconst contentStyle = {\r\n    height: '500px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#fff',\r\n};\r\n\r\nfunction Slider(){\r\n\r\n    return(\r\n        <Carousel autoplay >\r\n            <div>\r\n                <img alt=\"image9\" src={image9} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image2\" src={image2} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image1\" src={image1} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image3\" src={image3} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image4\" src={image4} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image5} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image6} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image7} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image8} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n\r\n\r\n","import React from \"react\";\r\nimport './App.css';\r\n\r\nfunction Title(){\r\n\r\n    return(\r\n        <div className=\"title text-center\">Hi yamliet!!.</div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport Slider from \"./Slider\";\r\nimport Title from \"./Title\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Title_wrap p-15\">\r\n        <Title />\r\n      </div>\r\n      <div className=\"p-15 Slider_wrap\">\r\n        <Slider />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}