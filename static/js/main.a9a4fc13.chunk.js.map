{"version":3,"sources":["img/img_1.jpg","img/img2.jpg","img/img3.jpg","img/img4_2.png","img/img5.png","img/img6.jpg","img/img7.jpg","img/img8.png","img/img9.jpg","img/img10.jpg","img/img11.jpg","img/img12.png","img/img13.jpg","img/img14.png","img/img15.jpg","img/img16.jpg","img/img17.jpg","img/img18.jpg","img/vedeo1.mp4","Slider.jsx","Title.jsx","Deck.jsx","DeckContainers.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["contentStyle","height","color","lineHeight","textAlign","background","Slider","className","autoplay","alt","src","image18","style","image17","image16","image15","image14","image13","image12","image11","image10","image9","image2","image1","image3","image4","image5","image6","image7","image8","Title","Menu","SubMenu","Item","to","cards","i","x","y","scale","rot","Math","random","delay","trans","r","s","Deck","useState","Set","gone","useSprings","length","from","props","set","bind","useDrag","index","args","down","mx","movement","xDir","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","div","transform","interpolate","backgroundImage","DeckContainers","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"oLAAe,G,YAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kC,GCA1B,I,MC0BTA,EAAe,CACjBC,OAAQ,QACRC,MAAO,OACPC,WAAY,QACZC,UAAW,SACXC,WAAY,QAmEDC,MAhEf,WAEI,OACA,qBAAKC,UAAU,cAAf,SACI,eAAC,IAAD,CAAUC,UAAQ,EAAlB,UACI,8BACI,qBAAKC,IAAI,UAAUC,IAAKC,EAASJ,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKG,EAASN,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKI,EAASP,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKK,EAASR,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKM,EAAST,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKO,EAASV,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKQ,EAASX,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKS,EAASZ,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,UAAUC,IAAKU,EAASb,UAAU,QAAQK,MAAOZ,MAE9D,8BACI,qBAAKS,IAAI,SAASC,IAAKW,EAAQd,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKY,EAAQf,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKa,EAAQhB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKc,EAAQjB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKe,EAAQlB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKgB,EAAQnB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKiB,EAAQpB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKkB,EAAQrB,UAAU,QAAQK,MAAOZ,MAE5D,8BACI,qBAAKS,IAAI,SAASC,IAAKmB,EAAQtB,UAAU,QAAQK,MAAOZ,Y,SC7DzD8B,MAxBf,WAII,OAFoBC,IAAZC,QAaR,aAVI,CAUJ,OAAKzB,UAAU,yBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAK0B,KAAN,UAAW,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACX,cAAC,IAAKD,KAAN,UAAW,cAAC,IAAD,CAAMC,GAAG,QAAT,0B,gCClBjBC,EAAQ,CACZ,wFACA,uFACA,uFACA,uFACA,uFACA,wFAIID,EAAK,SAACE,GAAD,MAAQ,CAAEC,EAAG,EAAGC,GAAQ,EAALF,EAAQG,MAAO,EAAGC,IAA2B,GAAhBC,KAAKC,SAAV,GAAyBC,MAAW,IAAJP,IAGhFQ,EAAQ,SAACC,EAAGC,GAAJ,2DAAwDD,EAAI,GAA5D,wBAA8EA,EAA9E,sBAA6FC,EAA7F,MA6BCC,MA3Bf,WACE,MAAeC,oBAAS,kBAAM,IAAIC,OAA3BC,EAAP,oBACA,EAAqBC,qBAAWhB,EAAMiB,QAAQ,SAAChB,GAAD,mBAAC,eAAYF,EAAGE,IAAhB,IAAoBiB,KAN/C,CAAEhB,EAAG,EAAGG,IAAK,EAAGD,MAAO,IAAKD,GAAI,UAMnD,mBAAOgB,EAAP,KAAcC,EAAd,KAEMC,EAAOC,aAAQ,YAA2E,IAAjEC,EAAgE,cAAvEC,KAAuE,MAAxDC,EAAwD,EAAxDA,KAAiBC,EAAuC,cAAlDC,SAAkD,MAAtBC,EAAsB,cAAlCC,UAAkC,MAAfC,EAAe,EAAfA,SAExEC,EAAMH,EAAO,GAAK,EAAI,GACvBH,GAFWK,EAAW,IAELf,EAAKiB,IAAIT,GAC/BH,GAAI,SAACnB,GACH,GAAIsB,IAAUtB,EAAd,CACA,IAAMgC,EAASlB,EAAKmB,IAAIX,GAIxB,MAAO,CAAErB,EAHC+B,GAAU,IAAME,OAAOC,YAAcL,EAAMN,EAAOC,EAAK,EAGrDrB,IAFAqB,EAAK,KAAOO,EAAe,GAANF,EAAWD,EAAW,GAEtC1B,MADHqB,EAAO,IAAM,EACHjB,WAAO6B,EAAWC,OAAQ,CAAEC,SAAU,GAAIC,QAASf,EAAO,IAAMQ,EAAS,IAAM,UAEpGR,GAAQV,EAAK0B,OAASzC,EAAMiB,QAAQyB,YAAW,kBAAM3B,EAAK4B,SAAWvB,GAAI,SAACnB,GAAD,OAAOF,EAAGE,QAAK,QAG/F,OAAOkB,EAAMyB,KAAI,WAAuB3C,GAAvB,IAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGE,EAAT,EAASA,IAAKD,EAAd,EAAcA,MAAd,OACf,cAAC,WAASyC,IAAV,CAAsBpE,MAAO,CAAEyB,IAAGC,KAAlC,SAEE,cAAC,WAAS0C,IAAV,2BAAkBxB,EAAKpB,IAAvB,IAA2BxB,MAAO,CAAEqE,UAAWC,aAAY,CAAC1C,EAAKD,GAAQK,GAAQuC,gBAAgB,OAAD,OAAShD,EAAMC,GAAf,UAF/EA,O,OC7BRgD,MARf,WACI,OACI,qBAAK7E,UAAU,OAAf,SACI,cAAC,EAAD,OC0BG8E,MAtBf,WACE,OAWE,cAVA,CAUA,sBACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWlF,IACxC,cAAC,IAAD,CAAOgF,KAAK,QAAQE,UAAWJ,WCfxBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKRQ,EAAcC,QACW,cAA7B7B,OAAO8B,SAASC,UAEe,UAA7B/B,OAAO8B,SAASC,UAEhB/B,OAAO8B,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAO/B,GAC9BgC,UAAUC,cACPC,SAASH,GACTZ,MAAK,SAACgB,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKE3C,GAAUA,EAAO4C,UACnB5C,EAAO4C,SAAST,KAMlBO,QAAQC,IAAI,sCAGR3C,GAAUA,EAAO6C,WACnB7C,EAAO6C,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCrFjEC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDOnB,SAAkBnD,GACvB,GAA6C,kBAAmBgC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,WAAwBxD,OAAO8B,SAAS2B,MACpDC,SAAW1D,OAAO8B,SAAS4B,OAIvC,OAGF1D,OAAO2D,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,WAAN,sBAEP5B,IAgEV,SAAiCM,EAAO/B,GAEtCyD,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BvC,MAAK,SAACwC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7C,MAAK,SAACgB,GAClCA,EAAa8B,aAAa9C,MAAK,WAC7BtB,OAAO8B,SAASuC,eAKpBpC,EAAgBC,EAAO/B,MAG1B8C,OAAM,WACLJ,QAAQC,IAAI,oEAtFVwB,CAAwBpC,EAAO/B,GAI/BgC,UAAUC,cAAc+B,MAAM7C,MAAK,WACjCuB,QAAQC,IACN,+GAMJb,EAAgBC,EAAO/B,OChC/BoE,GAIApD,K","file":"static/js/main.a9a4fc13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img_1.bebe361f.jpg\";","export default __webpack_public_path__ + \"static/media/img2.93cf6035.jpg\";","export default __webpack_public_path__ + \"static/media/img3.83b89d19.jpg\";","export default __webpack_public_path__ + \"static/media/img4_2.c68a2095.png\";","export default __webpack_public_path__ + \"static/media/img5.31695f94.png\";","export default __webpack_public_path__ + \"static/media/img6.92691816.jpg\";","export default __webpack_public_path__ + \"static/media/img7.78ce16d2.jpg\";","export default __webpack_public_path__ + \"static/media/img8.e5bf07bf.png\";","export default __webpack_public_path__ + \"static/media/img9.00c9eb79.jpg\";","export default __webpack_public_path__ + \"static/media/img10.8d7821ef.jpg\";","export default __webpack_public_path__ + \"static/media/img11.41d498ea.jpg\";","export default __webpack_public_path__ + \"static/media/img12.36c6e43f.png\";","export default __webpack_public_path__ + \"static/media/img13.8239354d.jpg\";","export default __webpack_public_path__ + \"static/media/img14.659e76a2.png\";","export default __webpack_public_path__ + \"static/media/img15.48eecc3f.jpg\";","export default __webpack_public_path__ + \"static/media/img16.6b5ec567.jpg\";","export default __webpack_public_path__ + \"static/media/img17.340dce13.jpg\";","export default __webpack_public_path__ + \"static/media/img18.fb7ce1e8.jpg\";","export default __webpack_public_path__ + \"static/media/vedeo1.cf525d8e.mp4\";","import React from \"react\";\r\nimport { Carousel } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport image1 from \"./img/img_1.jpg\";\r\nimport image2 from \"./img/img2.jpg\";\r\nimport image3 from \"./img/img3.jpg\";\r\nimport image4 from \"./img/img4_2.png\";\r\nimport image5 from \"./img/img5.png\";\r\nimport image6 from \"./img/img6.jpg\";\r\nimport image7 from \"./img/img7.jpg\";\r\nimport image8 from \"./img/img8.png\";\r\nimport image9 from \"./img/img9.jpg\";\r\nimport image10 from \"./img/img10.jpg\";\r\nimport image11 from \"./img/img11.jpg\";\r\nimport image12 from \"./img/img12.png\";\r\nimport image13 from \"./img/img13.jpg\";\r\nimport image14 from \"./img/img14.png\";\r\nimport image15 from \"./img/img15.jpg\";\r\nimport image16 from \"./img/img16.jpg\";\r\nimport image17 from \"./img/img17.jpg\";\r\nimport image18 from \"./img/img18.jpg\";\r\n\r\nimport vedeo1 from \"./img/vedeo1.mp4\";\r\n\r\nconst contentStyle = {\r\n    height: '500px',\r\n    color: '#fff',\r\n    lineHeight: '160px',\r\n    textAlign: 'center',\r\n    background: '#fff',\r\n};\r\n\r\nfunction Slider(){\r\n\r\n    return(\r\n    <div className=\"Slider_wrap\">\r\n        <Carousel autoplay >\r\n            <div>\r\n                <img alt=\"image18\" src={image18} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image17\" src={image17} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image16\" src={image16} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image15\" src={image15} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image14\" src={image14} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image13\" src={image13} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image12\" src={image12} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image11\" src={image11} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image10\" src={image10} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image9\" src={image9} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image2\" src={image2} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image1\" src={image1} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image3\" src={image3} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image4\" src={image4} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image5} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image6} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image7} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n            <div>\r\n                <img alt=\"image5\" src={image8} className=\"photo\" style={contentStyle}></img>\r\n            </div>\r\n        </Carousel>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu } from 'antd';\r\nimport './App.css';\r\n\r\nfunction Title(){\r\n\r\n    const { SubMenu } = Menu;\r\n\r\n    return(\r\n        // <div className=\"title text-center\">\r\n        //     <ul>\r\n        //         <li>\r\n        //             <Link to=\"/\">홈</Link>\r\n        //         </li>\r\n        //         <li>\r\n        //             <Link to=\"/Deck\">소개</Link>\r\n        //         </li>\r\n        //     </ul>\r\n        // </div>\r\n    <div className=\"Slider_wrap Title_Wrap\">\r\n        <Menu>\r\n            <Menu.Item><Link to=\"/\">Slide</Link></Menu.Item>\r\n            <Menu.Item><Link to=\"/Deck\">Deck</Link></Menu.Item>\r\n        </Menu>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import { render } from 'react-dom'\r\nimport React, { useState } from 'react'\r\nimport { useSprings, animated, to as interpolate } from 'react-spring'\r\nimport { useDrag } from 'react-use-gesture'\r\n\r\n\r\nconst cards = [\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img_1.jpg?raw=true',\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img2.jpg?raw=true',\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img6.jpg?raw=true',\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img7.jpg?raw=true',\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img8.png?raw=true',\r\n  'https://github.com/YangGwangSeong/yamliet/blob/main/client/src/img/img9.jpg?raw=true'\r\n]\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = (i) => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\r\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\r\n\r\nfunction Deck() {\r\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\r\n  const [props, set] = useSprings(cards.length, (i) => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\r\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n  const bind = useDrag(({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\r\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n    set((i) => {\r\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\r\n      const isGone = gone.has(index)\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\r\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\r\n    })\r\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set((i) => to(i)), 600)\r\n  })\r\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n  return props.map(({ x, y, rot, scale }, i) => (\r\n    <animated.div key={i} style={{ x, y }}>\r\n      {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n      <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\r\n    </animated.div>\r\n  ))\r\n}\r\n\r\nexport default Deck;\r\n","import React from 'react'\r\nimport Deck from \"./Deck\";\r\nimport './styles.css'\r\n\r\nfunction DeckContainers() {\r\n    return (\r\n        <div className=\"test\">\r\n            <Deck />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeckContainers;\r\n","import React from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Slider from \"./Slider\";\r\nimport Title from \"./Title\";\r\nimport DeckContainers from \"./DeckContainers\";\r\n//import './App.css';\r\n\r\n//npm install react-router-dom\r\n//npm install react-spring\r\n//npm install react-use-gesture\r\n\r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <div className=\"Title_wrap p-15\">\r\n    //     <Title />\r\n    //   </div>\r\n    //   <div className=\"p-15 Slider_wrap\">\r\n    //     <div>\r\n    //       <Route path=\"/\" exact={true} component={Slider} />\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <>\r\n      <Title />\r\n      <Switch>\r\n        <Route path=\"/\" exact={true} component={Slider} />\r\n        <Route path=\"/Deck\" component={DeckContainers} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; // * BrowserRouter 불러오기\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}